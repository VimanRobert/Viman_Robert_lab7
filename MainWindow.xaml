<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Viman_Robert_Lab5"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Viman_Robert_Lab5.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="465.423" Width="831.69" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" 
        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, 
                        Path=(Validation.Errors)/ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="19*"/>
            <ColumnDefinition Width="758*"/>
        </Grid.ColumnDefinitions>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="350" Margin="79,37,0,0" VerticalAlignment="Top" Width="700" Grid.Column="2">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="83*"/>
                        <ColumnDefinition Width="17*"/>
                        <ColumnDefinition Width="19*"/>
                        <ColumnDefinition Width="575*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="131,34,128,170" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="166,192,0,0" VerticalAlignment="Top" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="6,6,0,2" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"   
                     Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"   
                     Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnPrev1" Content="Previous" Grid.Column="3" HorizontalAlignment="Left" Margin="131,157,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnNext1" Content="Next" Grid.Column="3" HorizontalAlignment="Left" Margin="372,162,0,0" VerticalAlignment="Top" Width="75"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="14*"/>
                        <ColumnDefinition Width="0*"/>
                        <ColumnDefinition Width="19*"/>
                        <ColumnDefinition Width="661*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="150,34,128,170" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="150,192,0,0" VerticalAlignment="Top" Grid.Column="3" Height="120">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="71"/>
                            <ColumnDefinition Width="55"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="0" VerticalAlignment="Center" Height="26" Width="44"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center" Height="26" Width="41"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center" Height="26" Width="42"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                    </Grid>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="0,34,0,0" VerticalAlignment="Top" Width="75" Grid.Column="3"/>
                    <Button x:Name="btnEdit" Content="Edit" Grid.Column="3" HorizontalAlignment="Left" Margin="0,85,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnDelete" Content="Delete" Grid.Column="3" HorizontalAlignment="Left" Margin="0,132,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnSave" Content="Save" Grid.Column="3" HorizontalAlignment="Left" Margin="0,192,0,0" VerticalAlignment="Top" Width="75">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <!--Butonul Save va fi inactiv daca exista erori de 
                                             validare -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding 
                                         ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                            <Condition Binding="{Binding 
                                 ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false" />
             <!--10 TEMA LAB-->
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" Grid.Column="3" HorizontalAlignment="Left" Margin="0,260,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnPrev" Content="Previous" Grid.Column="3" HorizontalAlignment="Left" Margin="150,159,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnNext" Content="Next" Grid.Column="3" HorizontalAlignment="Left" Margin="458,164,0,0" VerticalAlignment="Top" Width="75"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders" >
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="163*"/>
                        <ColumnDefinition Width="532*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox HorizontalAlignment="Left" x:Name="cmbCustomers" Margin="142,64,0,0" VerticalAlignment="Top" Width="120" Grid.ColumnSpan="2" SelectedValue="{Binding 
                               ElementName=ordersDataGrid,Path=SelectedItem.CustId,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBox HorizontalAlignment="Left" Height="23" Margin="142,36,0,0" TextWrapping="Wrap" Text="Customers" VerticalAlignment="Top" Width="120" Background="#FFECE7E7" Grid.ColumnSpan="2"/>
                    <ComboBox HorizontalAlignment="Left" x:Name="cmbInventory" Margin="259.5,64,0,0" VerticalAlignment="Top" Width="120" Grid.Column="1" SelectedValue="{Binding 
                              ElementName=ordersDataGrid,Path=SelectedItem.CarId,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBox HorizontalAlignment="Left" Height="23" Margin="259.5,36,0,0" TextWrapping="Wrap" Text="Inventory" VerticalAlignment="Top" Width="120" Background="#FFF1ECEC" Grid.Column="1"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="142,134,152,-12" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.ColumnSpan="2" IsSynchronizedWithCurrentItem="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" 
                                 Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" 
                                 Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}" 
                                 Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}" 
                                 Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <Grid Height="100" Width="100"/>
        </TabControl>
        <GroupBox x:Name="gbOperations"  Button.Click="gbOperations_Click" Header="" HorizontalAlignment="Left" Height="100" Margin="10,90,0,0" VerticalAlignment="Top" Width="100" Grid.ColumnSpan="3">
            
            <StackPanel x:Name="spOperations">
                <Button x:Name="btnNew1" Click="btnNew1_Click" Content="New" HorizontalAlignment="Left" Margin="3,8,0,0" VerticalAlignment="Top" Width="75">
                       <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                            
                            </Style.Triggers>
                        </Style>
                    </Button.Style> 
                </Button>
                <Button x:Name="btnEdit1" Click="btnEdit1_Click" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="3,0,0,0">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
         <!--11 TEMA LAB-->        <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=custId, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnDelete1" Click="btnDelete1_Click" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="3,0,0,0">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" Control.PreviewMouseDoubleClick="Style_PreviewMouseDoubleClick" >
                            <Style.Triggers>

                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" Header="" HorizontalAlignment="Left" Height="78" Margin="0,195,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="2" Grid.Column="1">
            <StackPanel HorizontalAlignment="Left" Height="48" Width="80" VerticalAlignment="Top">
                <Button x:Name="btnSave1" Click="btnSave1_Click" Content="Save" HorizontalAlignment="Left" Margin="-6,-7,0,0" VerticalAlignment="Top" Width="75">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" TextBoxBase.TextChanged="Save the new customer">
                            <Style.Triggers>

                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnCancel1" Click="btnCancel1_Click" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" TextBoxBase.TextChanged="Double click to continue" Control.PreviewMouseDoubleClick="Style_PreviewMouseDoubleClick">
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </GroupBox>
    </Grid>
</Window>
